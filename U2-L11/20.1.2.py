# 20.1.2  Python 依赖管理  [50pts]
# 通过搜索引擎了解以下问题：
# 1. Python 依赖是什么？
# 在面向对象的中，类与类之间存在三种关系：依赖关系、组合关系、继承关系。
# 将一个类的类名或对象当做参数传递给另一个函数被使用的关系就是依赖关系

# 2. Python 的依赖管理存在哪些问题？
# 之前一直比较抵触用 Python ，很大一部分原因是觉得 Python 项目的环境管理比较混乱。55
# 而 Python 相比编程语言有时更体现了脚本语言的特性，系统化和标准化程度都不太高。
# 很多 Python 项目上来就是怼代码，没有声明依赖、配置环境的文件。这样的好处是简单项目堆砌起来非常快，
# 但是一旦代码量上了规模，依赖管理、环境配置、项目启动等就到处都是坑。
# 可是稍微了解了一下后发现其实 Python 不止能当脚本语言来用。基于一定的工具链，Python 也能写出漂亮标准的项目代码、将环境和依赖理的明明白白。

# 3. Dependency hell 是什么？
# 相依性地狱(英语：Dependency hell)，是指在操作系统中由于软件之间的依赖性不能被满足而引发的问题。

# 4. 为什么会出现这些问题？
# B和C都依赖于A。但是，如果在不同的时间安装它们，则它们可能取决于A的不同版本。例如，版本1导出type T = Int，而在版本2中导出type T = Bool。
# 仅当您尝试构建D时，才暴露出B和C是针对A的不同版本构建的问题，并且您无法将T version 1与T version 2进行比较。

# 5. Python 是如何解决这些问题的？
# 通过pip输出依赖;与pip直接导出全部不同, pipreqs只导出指定项目下Python文件import的库用法如下

# 6. 是否有第三方工具解决了这些问题？
# nest mode 嵌套模式
